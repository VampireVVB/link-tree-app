#include<stdio.h>
#include<stdlib.h>
typedef struct node{
int data;
struct node* llink;
struct node* rlink;
}node;
node* first=NULL;
    node* second=NULL;

node* create(node* prev,int ele,node* next)
{

    node* temp=(node*)malloc(sizeof(node));
    temp->rlink=next;
    temp->llink=prev;
    temp->data=ele;
    return (temp);
}
node* create_dll(int n,node* start)
{
    int i,ele;
    node* last;
    for(i=0;i<n;i++)
    {
        printf("enter data: ");
        scanf("%d",&ele);
        if(start==NULL)
            start=last=create(NULL,ele,NULL);
        else
            last=last->rlink=create(last,ele,NULL);
    }
    return start;
}
node* concat(node* x1,node* x2)
{
    node* curr;
    for(curr=x1;curr->rlink!=NULL;curr=curr->rlink);
    curr->rlink=x2;
    x2->llink=curr;
  return x1;
}
void display(node *start)
{
     node* curr;
    if(start==NULL)
        printf("\n list is empty \n");
    else
    {
      for(curr=start;curr!=NULL;curr=curr->rlink)
          printf("%d \t",curr->data);
    printf("\n");
}
}
int main()
{
    int n1,n2;
    node *x1,*x2;

    printf("enter number of nodes for linked list 1: ");
    scanf("%d",&n1);
   x1= create_dll(n1,first);
    display(x1);
    printf("enter number of nodes for linked list 2: ");
    scanf("%d",&n2);
    x2=create_dll(n2,second);
    display(x2);
    x1=concat(x1,x2);
    printf("after concat : ");
    display(x1);

}
